{% import "Ceres::PageDesign.Macros.IncludeComponents" as Loader %}
{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}
{% import "Ceres::PageDesign.Macros.Translations" as Translations %}
{{ component( "Ceres::PageDesign.Components.Notifications" ) }}
{{ component( "Ceres::Basket.Components.BasketPreview" ) }}
{{ component( "Ceres::Customer.Components.Login" ) }}
{{ component( "Ceres::Customer.Components.Registration" ) }}
{{ component( "Ceres::Basket.Components.AddItemToBasketOverlay" ) }}
{{ component( "Ceres::PageDesign.Components.Popper" ) }}

{% set currencyFormat = config("Ceres.currency.format") %}

{# CYT start #}
{% set activateModules = config('CeresVanilla.activateModules') %}
{% set isHome = services.template.isHome() %}
{% set isCategory = services.template.isCategory() %}
{% set isSearch = services.template.isSearch() %}
{% set isItem = services.template.isItem() %}
{% set stageCookie = config('CeresVanilla.devEnvironmentSetStageCookieContent') %}
{# CYT end #}

<!DOCTYPE html>

{% set lang = services.sessionStorage.getLang() %}

{% set metaLang = "de" %}
{% if lang == "de" or lang == "en" %}
    {% set metaLang = lang %}
{% endif %}

{% set fixNavBarPos = false %}
{% set basketAddInformation = config("Ceres.basket.add_item_to_basket_confirm") %}
{% set shippingCat = config("Ceres.global.shippingCostsCategoryId") %}

{% if services.template.isCategory() or services.template.isItem() %}
    {% set categoryBreadcrumbs = services.category.getHierarchy() %}
    {{ services.crossSelling.setType(config("Ceres.item.lists.cross_selling_type")) }}
{% endif %}

{% set showCategoryTypes = config('Ceres.header.show_category_types') %}
{% if showCategoryTypes | trim is empty %}
    {% set showCategoryTypes = "all" %}
{% endif %}

{% set categories = services.category.getNavigationTree(showCategoryTypes, lang, 6) %}

<html lang="{{ lang }}" data-framework="vue" prefix="og: http://ogp.me/ns#">

    <head>
        {% include getPartial('head') %}

        {% block PartialHead %}
        {% endblock %}

        {% for styleTemplate in get_additional_styles() %}
            {% include styleTemplate.path ignore missing with styleTemplate.params %}
        {% endfor %}
    </head>

    <body>
        <script>if('ontouchstart' in document.documentElement){document.body.classList.add("touch");}else{document.body.classList.add("no-touch");}</script>

        <div id="vue-app">
            <div class="wrapper wrapper-top">
                <!-- messages -->
                <notifications template="#vue-notifications" :initial-notifications="{{ services.notifications.getNotifications() | json_encode() }}"></notifications>
            </div>

            <div class="wrapper wrapper-left">
                <!-- filters -->
            </div>

            <div id="mw" class="wrapper wrapper-main">
                {% include getPartial('header') %}

                <div id="page-body" class="main">
                    {% block PageBody %}
                        <!-- inject content of inherited templates here -->
                    {% endblock %}
                </div>

                {% include getPartial('footer') %}

                {% block PartialFooter %}
                {% endblock %}
            </div>

            {% if basket is not defined %}
                {% set basket = services.basket.getBasketForTemplate() %}
            {% endif %}
            {% if config("Ceres.basket.preview_type") == "right" %}
                <div class="wrapper wrapper-right">
                    <basket-preview
                        template="#vue-basket-preview"
                        :basket-data="{{ basket | json_encode() }}">
                    </basket-preview>
                </div>
            {% endif %}

            <div class="wrapper wrapper-bottom">
                <!-- LOGIN MODAL -->
                <div id="login-modal-wrapper">
                    <div class="modal fade login-modal" id="login" tabindex="-1" role="dialog">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                    <div class="modal-title h3">{{ trans("Ceres::Template.accLogin") }}</div>
                                </div>
                                <login template="#vue-login" modal-element="login-modal-wrapper"></login>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- ./LOGIN MODAL -->

                <!-- REGISTRATION MODAL -->
                <div id="simple-registration-modal-wrapper">
                    <div class="modal fade" id="registration" tabindex="-1" role="dialog">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                    <div class="modal-title h3">
                                        {{ trans("Ceres::Template.accCreateAccount") }}

                                       <popper v-cloak class="pull-right m-r-1">
                                            <button slot="handle" class="btn btn-icon btn-secondary btn-sm">
                                                <i class="fa fa-info"></i>
                                            </button>
                                            <div slot="title">
                                                {{ trans("Ceres::Template.generalContactInformations") }}
                                            </div>
                                            <ul slot="content" class='p-l-1'>
                                                <li class='m-b-1'>{{ trans('Ceres::Template.generalContactInfoText1') }}</li>
                                                <li class='m-b-1'>{{ trans('Ceres::Template.generalContactInfoText2') }}</li>
                                                <li class='m-b-1'>{{ trans('Ceres::Template.generalContactInfoText3') }}</li>
                                                <li>{{ trans('Ceres::Template.generalContactInfoText4') }}</li>
                                            </ul>
                                        </popper>
                                    </div>
                                </div>
                                <registration template="#vue-registration" :is-simple-registration="true" modal-element="simple-registration-modal-wrapper"></registration>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- ./REGISTRATION MODAL -->

                <!-- BASKET MODAL -->
                <add-item-to-basket-overlay template="#vue-add-item-to-basket-overlay" :basket-add-information="{{ basketAddInformation | json_encode() }}"></add-item-to-basket-overlay>
                <!-- ./BASKET MODAL -->

                <!-- SHIPPINGCOSTS MODAL -->
                <div id="shippingscosts-modal-wrapper">
                    <div class="modal fade" id="shippingscosts" tabindex="-1" role="dialog">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                    <div class="modal-title h3">{{ trans('Ceres::Template.itemShippingCosts') }}</div>
                                </div>
                                <div class="modal-body">
                                    {% include category_template(shippingCat, lang, services.webstoreConfig.getWebstoreConfig().webstoreId) ignore missing %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- ./SHIPPINGCOSTS MODAL -->
            </div>
        </div>

        <div id="vue-error" style="display:none">
            {% include "Ceres::PageDesign.Partials.VueError" %}
        </div>

        {# cyt scripts START #}

        {# lazyload weird 300km minified ceres.css #}
        <script>
            !function () {
                var e = document.createElement("link");
                e.type = "text/css",
                e.rel = "stylesheet",
                e.href = "{{ plugin_path('CeresVanilla') }}/css/build/main.min.css";
                var t = document.getElementsByTagName("link")[0];
                t.parentNode.insertBefore(e, t)
            }();
        </script>
        <script>
            !function () {
                var e = document.createElement("link");
                e.type = "text/css",
                e.rel = "stylesheet",
                e.href = "{{ plugin_path('Ceres') }}/css/ceres.css";
                var t = document.getElementsByTagName("link")[0];
                t.parentNode.insertBefore(e, t)
            }();
        </script>

        {# Webfonts #}
        {% set WebFontsActive = config( 'CeresVanilla.WebFontsActive' ) %}
        {% set WebFontsFamilies = config( 'CeresVanilla.WebFontsFamilies' ) %}
        {% set WebFont1 = config( 'CeresVanilla.WebFont1' ) %}
        {% set WebFont2 = config( 'CeresVanilla.WebFont2' ) %}
        {% set WebFont3 = config( 'CeresVanilla.WebFont3' ) %}
        {% set WebFontExternal = config( 'CeresVanilla.External_Font' ) %}
        {% set WebFontExternalURL = config( 'CeresVanilla.External_Font_URL' ) %}
        {% set TypekitActive = config( 'CeresVanilla.TypekitActive' ) %}
        {% set TypekitID = config( 'CeresVanilla.TypekitID' ) %}
        {% if WebFontsActive %}
        <script>
            WebFontConfig = {
                {% if WebFontsFamilies is not empty %}
                google: {
                    families: [ '{{ WebFontsFamilies }}' ]
                },{% endif %}{% if WebFontExternal is not empty and WebFontExternalURL is not empty %}
                custom: {
                    families: ['{{ WebFontExternal }}'],
                    urls: [ '{{ WebFontExternalURL }}' ]
                },{% endif %}
                active: function( ) {
                    sessionStorage.fonts = true;
                }
            };
            ( function( ) {
                var wf = document.createElement( 'script' );
                wf.src = ( 'https:' == document.location.protocol
                    ? 'https'
                    : 'http' ) + '://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';
                wf.type = 'text/javascript';
                wf.async = 'true';
                var s = document.getElementsByTagName( 'script' )[ 0 ];
                s.parentNode.insertBefore( wf, s );
            })( );
        </script>
        {% endif %}
        {% if TypekitActive %}
        <script>
          (function(d) {
            var config = {
              kitId: '{{ TypekitID }}',
              scriptTimeout: 3000,
              async: false
            },
            h=d.documentElement,t=setTimeout(function(){h.className=h.className.replace(/\bwf-loading\b/g,"")+" wf-inactive";},config.scriptTimeout),tk=d.createElement("script"),f=false,s=d.getElementsByTagName("script")[0],a;h.className+=" wf-loading";tk.src='https://use.typekit.net/'+config.kitId+'.js';tk.async=true;tk.onload=tk.onreadystatechange=function(){a=this.readyState;if(f||a&&a!="complete"&&a!="loaded")return;f=true;clearTimeout(t);try{Typekit.load(config)}catch(e){}};s.parentNode.insertBefore(tk,s)
          })(document);
        </script>
        {% endif %}

        {# load modules home #}
        <script>
            window.onload = function() {
              if (window.jQuery) {
                  {# global custom js #}
                  var s = document.createElement('script');
                  s.type = 'text/javascript';
                  s.async = true;
                  s.src = '{{ plugin_path('CeresVanilla') }}/js/build/app.min.js';
                  var x = document.getElementsByTagName('head')[0];
                  x.appendChild(s);

                  {% if isHome %}
                      console.log('only home');
                  {% endif %}

                  {% if isCategory or isSearch %}
                      console.log('only category or search');
                  {% endif %}

                  {% if isItem %}
                      console.log('only item');
                  {% endif %}

              } else {
                  console.log("no jQuery found");
              }
            }

            /**
             * polyfill ie 11 (responsive bg images)
             */
            function loadJS( u ) {
              var r = document.getElementsByTagName( "script" )[ 0 ],
                s = document.createElement( "script" );
              s.src = u;
              r.parentNode.insertBefore( s, r );
            }

            if ( !window.HTMLPictureElement || !( 'sizes' in document.createElement( 'img' ) ) ) {
              loadJS( "{{ plugin_path('CeresVanilla') }}/js/vendor/ls.respimg.min.js" );
            }

            {# stage cookie -> externe geräte #}
            function getParameterByName(name, url) {
                if (!url) url = window.location.href;
                name = name.replace(/[\[\]]/g, "\\$&");
                var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                    results = regex.exec(url);
                if (!results) return null;
                if (!results[2]) return '';
                return decodeURIComponent(results[2].replace(/\+/g, " "));
            }

            var stage = getParameterByName('stage');
            if (stage) {
              document.cookie = "stage={{ stageCookie }}; path=/"
            }
        </script>
        {# cyt scripts END #}

        <script>
            App = {
                config: {{ ceresConfig | json_encode | raw }},
                activeCurrency: "{{ services.checkout.getCurrencyData()[currencyFormat] }}",
                currencyPattern: {{  services.checkout.getCurrencyPattern() | json_encode | raw }},
                isCategoryView: {% if services.template.isCategory() == "1" %}true{% else %}false{% endif %},
                isCheckoutView : {% if services.template.isCheckout() == "1" %}true{% else %}false{% endif %},
                isSearch: {% if services.template.isSearch() == "1" %}true{% else %}false{% endif %},
                language: "{{ lang }}",
                decimalSeparator: "{{ config("IO.format.separator_decimal") }}"
            };
        </script>

        {{ Loader.include_components() }}

        {{ LayoutContainer.show("Ceres::Script.Loader") }}

        {{ Translations.add( "Ceres", "Template" ) }}
        {% if config("Ceres.log.performance.level") == 'development' %}
            <script src="{{ plugin_path('Ceres') }}/js/dist/ceres-vendor.js"></script>
            <script src="{{ plugin_path('Ceres') }}/js/dist/ceres-app.js"></script>
        {% else %}
            <script src="{{ plugin_path('Ceres') }}/js/dist/ceres.min.js"></script>
        {% endif %}

        {% for scriptTemplate in get_additional_scripts() %}
            {% include scriptTemplate.path ignore missing with scriptTemplate.params %}
        {% endfor %}

        {{ LayoutContainer.show("Ceres::Script.AfterScriptsLoaded") }}

        {{ get_filtered_tags() }}

        <script>
            var rootElement = document.getElementById("vue-app");
            var errorElement = document.getElementById("vue-error");

            Vue.options.delimiters = ['${', '}'];

            var vueEventHub = new Vue();

            var vueApp = new Vue({
                store: window.ceresStore
            });
            vueApp.$mount( rootElement.cloneNode(true) );

            if ( vueApp.$el.id !== "vue-app")
            {
                rootElement.parentNode.removeChild(rootElement);
                errorElement.style.display = "block";
            }
            else
            {
                document.body.replaceChild( vueApp.$el, rootElement );
                errorElement.parentNode.removeChild(errorElement);
            }
        </script>
    </body>
</html>
